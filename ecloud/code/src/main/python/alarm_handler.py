#!/usr/bin/env python

import sys
import pika
import json

# <UNKNOWN>
# UDP: [10.10.132.13]:2049->[10.10.132.64]:162
# DISMAN-EVENT-MIB::sysUpTimeInstance 168:13:01:49.87
# SNMPv2-MIB::snmpTrapOID.0 SNMPv2-SMI::enterprises.3183.1.1.0.552833
# SNMPv2-SMI::enterprises.3183.1.1.1 "37 30 30 31 4D 53 00 25 90 A7 F2 A8 00 00 00 00 
# 00 2E 22 21 27 AB FF FF 20 20 02 20 55 0A 00 F1 
# FF FF 00 00 00 00 00 19 7C 2A 00 00 34 06 80 10 
# 01 08 50 53 20 53 74 61 74 75 73 20 20 20 20 20 
# 20 20 C1 "
# SNMP-COMMUNITY-MIB::snmpTrapAddress.0 10.10.132.13
# SNMP-COMMUNITY-MIB::snmpTrapCommunity.0 "public"
# SNMPv2-MIB::snmpTrapEnterprise.0 SNMPv2-SMI::enterprises.3183.1.1

# This is a ipmi snmptrap message generated by snmptrapd,
# alarm_handler.py read the message from stdin and get
# specific_trap and var_binds, specific_trap is in the
# number end of 4 line(552883), var_binds is the hex string
# between line 5~8, then write it into rabbitmq.

trap_msg = sys.stdin.read()
trap_dct = trap_msg.split('\n')
sep_traps = trap_dct[3].split(' ')
sep_trap=sep_traps[1]
pos = sep_trap.rfind('.')


msg = dict()
lpos = trap_dct[1].find('[')
rpos = trap_dct[1].find(']')
msg['host'] = trap_dct[1][lpos+1:rpos]
msg['specific_trap'] = int(sep_trap[pos+1:])
pos = trap_dct[4].find('"')
var_binds = trap_dct[4][pos+1:]+trap_dct[5]+trap_dct[6]+trap_dct[7]
var_binds = var_binds.replace(' ', '')
var_binds = var_binds.replace('"', '')
msg['var_binds'] = var_binds
msg = json.dumps(msg)

__EXCHANGE = 'hosts.notifications'
__QUEUE = 'ecloud-alarm'
__ROUTING_KEY = 'snmptrap'

connection = pika.BlockingConnection(pika.ConnectionParameters(sys.argv[1]))
channel = connection.channel()
channel.exchange_declare(exchange=__EXCHANGE, type='topic')
channel.queue_declare(queue=__QUEUE)
channel.queue_bind(exchange=__EXCHANGE, queue=__QUEUE, routing_key=__ROUTING_KEY)
channel.basic_publish(exchange=__EXCHANGE, routing_key=__ROUTING_KEY, body=msg)
connection.close()
